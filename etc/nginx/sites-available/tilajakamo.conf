upstream SITENAME.EXAMPLE.COM_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).
  server unix:/site/SITENAME.EXAMPLE.COM/run/gunicorn.sock fail_timeout=0;
}

server {
        listen 80;
        server_name SITENAME.EXAMPLE.COM;
#        root /site/SITENAME.EXAMPLE.COM/www;
#        index index.html index.htm;

        # redirect to https
        return 301 https://SITENAME.EXAMPLE.COM$request_uri;
}

server {
    listen 443 ssl;
    server_name SITENAME.EXAMPLE.COM; 

        ssl on;

        ssl_certificate /etc/letsencrypt/live/SITENAME.EXAMPLE.COM/cert.pem;
        ssl_certificate_key /etc/letsencrypt/live/SITENAME.EXAMPLE.COM/privkey.pem;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/letsencrypt/live/SITENAME.EXAMPLE.COM/fullchain.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;

        ssl_session_timeout 5m;

    location / {
            proxy_redirect    off;
            proxy_set_header  X-Forwarded-Protocol    $scheme;
        proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  Host $host;
            #if (!-f $request_filename) {
                proxy_pass http://SITENAME.EXAMPLE.COM_server;
            #    break;
            #}
    }

    location /static/ {
        root            /site/SITENAME.EXAMPLE.COM/www;
        access_log      off;
        log_not_found   off;
        expires 30d;
    }

    location /robots.txt {
        root            /site/SITENAME.EXAMPLE.COM/www/static;
        access_log      off;
        log_not_found   off;
    }

    location /favicon.ico {
        root            /site/SITENAME.EXAMPLE.COM/www/static/img;
        access_log      off;
        log_not_found   off;
    }

}


